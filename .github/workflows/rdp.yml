name: CI

on: workflow_dispatch

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 9999

    steps:
    - name: Download Ngrok
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip -DestinationPath C:\Windows\System32
    
    - name: Enable TS
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 0
    
    - name: Create Tunnel
      run: |
        cd C:\Windows\System32
        ./ngrok.exe authtoken "${{ secrets.NGROK_AUTH_TOKEN }}"
        Start-Process ngrok.exe -ArgumentList "tcp 3389"
    
    - name: Connect to RDP
      run: |
        # Configure user
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "Runner@123" -Force)
        Write-Host " Waiting for connection..."
        Start-Sleep -Seconds 10
        
        # Get public URL
        $api = "http://localhost:4040/api/tunnels"
        $tries = 0
        $maxTries = 10
        $success = $false
        
        Write-Host " Getting connection details..."
        do {
            $tries++
            try {
                $response = Invoke-WebRequest -Uri $api -UseBasicParsing
                $data = ConvertFrom-Json $response.Content
                $url = $data.tunnels[0].public_url -replace "tcp://", ""
                Write-Host " Tunnel created successfully!"
                Write-Host " RDP Connection Details:"
                Write-Host "--------------------------------"
                Write-Host " Host: $url"
                Write-Host " Username: runneradmin"
                Write-Host " Password: Runner@123"
                Write-Host "--------------------------------"
                Write-Host " Don't close this window, connection will terminate if the process ends"
                $success = $true
                break
            }
            catch {
                if ($tries -lt $maxTries) {
                    Write-Host " Waiting for tunnel... (Attempt $tries of $maxTries)"
                    Start-Sleep -Seconds 5
                }
            }
        } while ($tries -lt $maxTries)
        
        if (-not $success) {
            Write-Host " Failed to establish connection after $maxTries attempts"
            exit 1
        }
    
    - name: Keep Alive
      run: |
        $i = 0
        do {
            if ($i % 10 -eq 0) {
                try {
                    $response = Invoke-WebRequest -Uri "http://localhost:4040/api/tunnels" -UseBasicParsing
                    $data = ConvertFrom-Json $response.Content
                    $url = $data.tunnels[0].public_url -replace "tcp://", ""
                    Write-Host " RDP still active!"
                    Write-Host " Connection Details:"
                    Write-Host "--------------------------------"
                    Write-Host " Host: $url"
                    Write-Host " Username: runneradmin"
                    Write-Host " Password: Runner@123"
                    Write-Host "--------------------------------"
                }
                catch {
                    Write-Host " Could not verify connection status"
                }
            }
            Start-Sleep -Seconds 60
            $i++
            Write-Host " Session active for $i minute(s)"
        } while ($true)
